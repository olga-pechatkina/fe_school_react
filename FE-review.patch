Index: src/MyShop.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/MyShop.js b/src/MyShop.js
--- a/src/MyShop.js	(revision de0f009cfe6425157ba32a1ddfc8420e1da4feaa)
+++ b/src/MyShop.js	(date 1617634058506)
@@ -3,10 +3,12 @@
 
 const MyShop  = (props) =>  {
 
-  return(
-  <ItemsComp items={props.items.filter(it=> props.userItems.find(el => el === it.id)!== undefined)} header = "Магазин" edit = "true"/>
-  )
-  }
+
+  const items = props.items.filter(it=> props.userItems.find(el => el === it.id)!== undefined)
+  // тут важно не забыть, что либо editable={true} либо вообще весь этот раздел доступен только для продавца
+  return <ItemsComp items={items} header="Магазин" editable={true}/>
+
+}
  
   const mapStateToProps = state => {
     return {
Index: src/Item.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Item.js b/src/Item.js
--- a/src/Item.js	(revision de0f009cfe6425157ba32a1ddfc8420e1da4feaa)
+++ b/src/Item.js	(date 1617629069039)
@@ -1,8 +1,9 @@
 import React, { useState } from "react";
-
+//TODO: см комменты
 const Item = (props) => {
     // readonly={readonly}
-    const [readonly, setRO] = useState("false");
+    // зачем нам тут string?
+    const [_editable, setEditable] = useState(false);
 
     function handleChange(e) {
         props.onChange(e.target.id);
@@ -15,10 +16,23 @@
                 <img className="item1" src={props.item.photo} alt =""/>
             </span>            
         </div>
-        {(props.edit==="true") && (<button className = "item-block__edit" title = "Редактировать" onClick={() => document.getElementByTagName('input').readOnly = false}/>)}
+        {/* Метод правильно называется getElementsByTagName.
+            Вообще все подобные селекторы в dom используют множественное число в своем названии,
+            потому что все они возвращают коллекцию элементов.
+            Однако, это плохая практика использоват обращение к реальному dom внутри реакт компонента.
+            В данном случае лучше будет написать компонент <Button title={"Редактировать"} onClick={clickFunction}>
+            В clickFunction у тебя будет доступен this.state компонента, который нужно редактировать и сохранять.
+            Также нужно иметь иметь ввиду, что если мы используем этот компонент для разных ролей пользователей,
+            то возможность редактирования на уровне prop должна передаваться с учетом роли.
+         */}
+
+        {props.editable && <button className = "item-block__edit" title = "Редактировать" onClick={() => setEditable(!_editable)}/>}
+
+        {/*  а вот этот кусок желательно сделать компонентом, который тебе нужно радактировать и сохранять */}
         <div className = "item-block__info-container">
-            <input type="text" className = "item-block__name" value= {props.item.name} />
-            <div className = "item-block__master-name"> {props.item.seller} </div>
+            <div className = {_editable ? "item-block__name--editable" : "item-block__name" }
+                 contentEditable={_editable} >{props.item.name}</div>
+            <div className = "item-block__master-name"> {props.item?.sellerName} </div>
             <div className = "item-block__payment-container">
                 <div className = "item-block__cost tobasket">
                 <span>{props.item.price}</span>
Index: src/ItemsComp.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/ItemsComp.js b/src/ItemsComp.js
--- a/src/ItemsComp.js	(revision de0f009cfe6425157ba32a1ddfc8420e1da4feaa)
+++ b/src/ItemsComp.js	(date 1617634058497)
@@ -2,8 +2,6 @@
 
 const ItemsComp = (props) =>   {
 
-    
-
     return(
         <div className="MyShop">
             <div className ="App-header__ins">
@@ -14,7 +12,7 @@
             </div>
             <div className = "all-items-block-favorites">
             {props.items.map((item, index) => (
-                <Item item={item} edit={props.edit} onChange = {props.onChange}/>
+                <Item item={item} editable={props.editable} key={index.toString() + '--' + index} onChange = {props.onChange}/>
             ))}
             </div>
         </div>
Index: src/ItemDetails.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/ItemDetails.js b/src/ItemDetails.js
--- a/src/ItemDetails.js	(revision de0f009cfe6425157ba32a1ddfc8420e1da4feaa)
+++ b/src/ItemDetails.js	(date 1617630323425)
@@ -1,5 +1,6 @@
 import { connect } from 'react-redux'
 
+//TODO: read comments
 const ItemDetails = (props) => {
   const item = props.items.find(it => it.id === props.match.params.id);
 
@@ -28,32 +29,37 @@
           </ul>
         </div>  
         <div style={{top: "5px", position: "relative", textAlign: "right"}}>
+        {/* вот эта кнопка используется несколько раз. предлагаю ее и аналогничные ей вынести в отдельный компонент
+        + кнопка внутри ссылки - плохо. у тебя есть возможность написать обработчик onClick, в который передать любой код,
+         в том числе и редирект*/}
         <a href="./message_read">
             <button type="button" className="btn-rubrics-mobile-view_seller">Написать продавцу</button>
         </a>
         </div>
       </div>
-      <span>         
-        <img className="item1" style={{padding: "6px 0px", margin: "0px 5%"}}src={item.photo} alt =""/>
+      <span>
+        {/*  если мы по какой-то причине не передаем сюда ничего, но имеем возможность попасть в этот раздел,
+        предлагю проверять на пустоту и выводить сообщение об ошибке или хотя бы добавить оператор опц. послед-ти */}
+        <img className="item1" style={{padding: "6px 0px", margin: "0px 5%"}} src={item?.photo} alt =""/>
       </span> 
       <div className = "info-LK">
           <div className = "info-LK-item">
               <div className = "info-LK-item-left">Продавец:</div>
-              <div className = "info-LK-item-right">{props.sellers.find(el => el.id === item.sellerId).name} </div>
+              <div className = "info-LK-item-right">{props.sellers.find(el => el.id === item?.sellerId)?.name} </div>
           </div>
           <hr className = "line"/>
           <div className = "info-LK-item">
               <div className = "info-LK-item-left">Город:</div>
-              <div className = "info-LK-item-right">{props.sellers.find(el => el.id === item.sellerId).city}</div>                
+              <div className = "info-LK-item-right">{props.sellers.find(el => el.id === item?.sellerId)?.city}</div>
           </div>
           <hr className = "line"/>
           <div className = "info-LK-item">
               <div className = "info-LK-item-left">Материал:</div>
-              <div className = "info-LK-item-right">{item.fabric}</div>                
+              <div className = "info-LK-item-right">{item?.fabric}</div>
           </div>
           <div className = "info-LK-item">
               <div className = "info-LK-item-left">Размеры:</div>
-              <div className = "info-LK-item-right">{item.size}</div>                
+              <div className = "info-LK-item-right">{item?.size}</div>
           </div>
           <hr className = "line"/>
       </div>
Index: src/store/reducers/clothes.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/store/reducers/clothes.js b/src/store/reducers/clothes.js
--- a/src/store/reducers/clothes.js	(revision de0f009cfe6425157ba32a1ddfc8420e1da4feaa)
+++ b/src/store/reducers/clothes.js	(date 1617619950025)
@@ -26,7 +26,7 @@
         {
           id: "1",
           name: "Кардиган",
-          sellerId: "1",
+          sellerId: "1", //TODO: лучше не строкой. строка в id это неудобно
           price: "1900",
           photo: "/item1.jpg",
           size: "44-56",
Index: src/Itemslist.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Itemslist.js b/src/items/Itemslist.js
rename from src/Itemslist.js
rename to src/items/Itemslist.js
--- a/src/Itemslist.js	(revision de0f009cfe6425157ba32a1ddfc8420e1da4feaa)
+++ b/src/items/Itemslist.js	(date 1617635107839)
@@ -1,9 +1,14 @@
 import { connect } from 'react-redux'
 import React, { useState } from "react";
+import ItemContainer from "./item-container";
 
 const Itemslist = (props) =>  {
     const [mode, setMode] = useState(0);
-
+//TODO: read comments
+    /** <div className="item-container"...> и <div className = "item-container-list"> должны быть в данном случае отдельными компонентами,
+     *   тк. их тут может быть > 1. У этих компонентов должен быть проп key с уникальным значением.
+     *  Можно использовать как один из компонентов этого значения index
+     **/
 return(
     <div className = "all-items">
         <div className = "filter-type">
@@ -11,32 +16,13 @@
             <button className ="filter-list" onClick={() => setMode(0)}/>           
         </div>
         {(mode===0) && (<div className = "all-items-block">
-            {props.items.map((item, index) => (
-                <div className = "item-container"> 
-                <div className = "item-block">
-                    <span> 
-                    <a href={"/details/" + item.id}>        
-                        <img className="item1" src={item.photo} alt =""/>
-                    </a> 
-                    </span>  
-                </div>
-                <button className = "item-block__favorite" title = "Добавить в Избранное"/>
-                <div className = "item-block__info-container">
-                    <div className = "item-block__name"> {item.name} </div>
-                    <a href={'./seller/' + item.sellerId}>
-                    <div className = "item-block__master-name"> {props.sellerName.find(el => el.id === item.sellerId).name } </div>
-                    </a>
-                    <div className = "item-block__payment-container">
-                    <div className = "item-block__cost tobasket">
-                        <span>{item.price}</span>
-                        <button className="item-block__to-basket" title="Положить в корзину товар">В корзину</button>
-                    </div>
-                    </div>
-                </div>
-                </div>
-            ))}
+            {props.items.map((item, index) => (<ItemContainer item={item}
+                               sellerName={props.sellerName.find(el => el.id === item.sellerId).name}
+                               key={index + '--' + index}
+            />))}
         </div>)}
         {(mode===1) && (<div className = "all-items-list">
+            {/* аналогично с ItemContainer, можно название для компонента поумнее придумать. Я тут только примеры привожу :)*/}
             {props.items.map((item, index) => (
                 <div className = "item-container-list">
                     <div className = "item-list">
@@ -46,7 +32,7 @@
                     </div>
                     <div className = "item-list_info-container">
                         <div className = "item-list_name"> {item.name} </div>
-                        <div className = "item-list__master-name"> {item.seller} </div>
+                        <div className = "item-list__master-name"> {item.sellerName} </div>
                     </div>
                     <div className = "item-list__payment-container">
                         <div className = "item-list__cost2">{item.price}</div>
Index: src/index.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/index.css b/src/index.css
--- a/src/index.css	(revision de0f009cfe6425157ba32a1ddfc8420e1da4feaa)
+++ b/src/index.css	(date 1617627792920)
@@ -310,6 +310,10 @@
     margin-bottom: 6px;
 }
 
+.item-block__name--editable {
+  border: 1px solid #333;
+}
+
 .item-block__master-name {
   display: block;
   font-size: 12px;
Index: src/IndexPage.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/IndexPage.js b/src/IndexPage.js
--- a/src/IndexPage.js	(revision de0f009cfe6425157ba32a1ddfc8420e1da4feaa)
+++ b/src/IndexPage.js	(date 1617636359657)
@@ -1,11 +1,12 @@
 import React from "react";
-import Itemslist from "./Itemslist"
+import Itemslist from "./items/Itemslist"
 import { connect } from 'react-redux'
 import ItemsComp from "./ItemsComp";
 
+//TODO: see comments
 class IndexPage extends React.Component {
-  constructor() {
-    super();
+  constructor(props) {
+    super(props);
 
     this.state = {
       filterCity: "",
@@ -53,13 +54,20 @@
     <div className = "hide-on-mobile">
       <span className = "banner"/>
     </div>
-    <div className = "catalog">     
+    <div className = "catalog">
+
+      {/* весь блок выносим как компонент FilterPanel или что-то в этом духе.
+          Нужно заменить чекбоксы на радиогруппу там, где преполагается исключающий выбор. Если выбор множественный, можно оставить чекбоксы.
+       */}
       <aside id = "filter-panel-left" className = "hide-on-mobile">
       <div className = "catalog-filters-list">      
           <div className = "catalog-filters-item">
             <div className = "catalog-filters-box_top">
               <span className = "catalog-filters-box_name">Город</span>
             </div>
+            {/* желательно сделать компонент Filter, внутрь ему сложить эту разметку, передать тип (checkbox/radio) и хэндлер на onChange.
+              см. https://developer.mozilla.org/ru/docs/Web/HTML/Element/Input/radio
+             Сами методы для onChange можно реализовать в FilterPanel*/}
             <div className = "catalog-filters-box_content">
               <label className ="catalog-filters_check">
                 <span className = "catalog-filters_check--left">
@@ -176,8 +184,12 @@
           </div>        
         </div>
       </aside>
-      <Itemslist items={this.props.items.filter(item => (!this.state.filterYear || (this.state.filterYear && item.year === this.state.filterYear)) &&
-        (!this.state.filterPrice || (this.state.filterPriceMin < item.price && (this.state.filterPriceMax > item.price || this.state.filterPriceMax === null))))} />
+      {/* давай тут попробуем красиво сделать. я сама с редаксом в бою дело не имела, но, раз уж в программе есть...
+      https://redux.js.org/tutorials/fundamentals/part-7-standard-patterns у них тут есть пример с фильтрами */}
+      <Itemslist
+          items={this.props.items.filter(item => (!this.state.filterYear || (this.state.filterYear && item.year === this.state.filterYear)) &&
+        (!this.state.filterPrice || (this.state.filterPriceMin < item.price && (this.state.filterPriceMax > item.price || this.state.filterPriceMax === null))))}
+      />
     </div>
   </div>
 );
Index: src/Authorization.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Authorization.js b/src/Authorization.js
--- a/src/Authorization.js	(revision de0f009cfe6425157ba32a1ddfc8420e1da4feaa)
+++ b/src/Authorization.js	(date 1617615260760)
@@ -5,7 +5,7 @@
                 <div className = "logo"/>
         </a>
         </div>
-        <div class = "wrapper">
+        <div className = "wrapper">
             <h1>Авторизация</h1>
             <div className = "auth-row">
                 <input className = "auth-input" placeholder = "Телефон, email или логин"/>
Index: src/Seller.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Seller.js b/src/Seller.js
--- a/src/Seller.js	(revision de0f009cfe6425157ba32a1ddfc8420e1da4feaa)
+++ b/src/Seller.js	(date 1617636113263)
@@ -25,6 +25,9 @@
           </ul>
         </div>  
         <div style={{top: "5px", position: "relative", textAlign: "right"}}>
+            {/* вот эта кнопка используется несколько раз. предлагаю ее и аналогничные ей вынести в отдельный компонент
+        + кнопка внутри ссылки - плохо. у тебя есть возможность написать обработчик onClick, в который передать любой код,
+         в том числе и редирект с параметром */}
         <a href="./message_read">
             <button type="button" className="btn-rubrics-mobile-view_seller">Написать продавцу</button>
         </a>
@@ -33,12 +36,12 @@
       <div className = "info-LK">
           <div className = "info-LK-item">
               <div className = "info-LK-item-left">Продавец:</div>
-              <div className = "info-LK-item-right">{props.sellers.find(el => el.id === props.match.params.id).name}</div>
+              <div className = "info-LK-item-right">{props.sellers.find(el => el.id === props.match.params.id)?.name}</div>
           </div>
           <hr className = "line"/>
           <div className = "info-LK-item">
               <div className = "info-LK-item-left">Город:</div>
-              <div className = "info-LK-item-right">{props.sellers.find(el => el.id === props.match.params.id).city}</div>                
+              <div className = "info-LK-item-right">{props.sellers.find(el => el.id === props.match.params.id)?.city}</div>
           </div>
           <hr className = "line"/>
       </div>
Index: src/Messages.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Messages.js b/src/Messages.js
--- a/src/Messages.js	(revision de0f009cfe6425157ba32a1ddfc8420e1da4feaa)
+++ b/src/Messages.js	(date 1617612589792)
@@ -10,7 +10,7 @@
             <div className = "messages-item">
                 <div className = "dialog-date">13 марта</div>
                 <div className = "dialog-info">
-                    <a href="/message_read" class="dialog-block-link" draggable="false">Диалог</a>
+                    <a href="/message_read" className="dialog-block-link" draggable="false">Диалог</a>
                     <div className = "dialog-info-author">BestDresses</div>
                     <div className = "dialog-info-text">Ваш размер есть в наличии. Рекомендуем выбрать цвет, который будет сочетаться с маджентов</div>               
                 </div>
@@ -18,7 +18,7 @@
             <div className = "messages-item">
                 <div className = "dialog-date">13 марта</div>
                 <div className = "dialog-info">
-                    <a href="/message_read" class="dialog-block-link" draggable="false">Диалог</a>
+                    <a href="/message_read" className="dialog-block-link" draggable="false">Диалог</a>
                     <div className = "dialog-info-author">BestDresses</div>
                     <div className = "dialog-info-text">Ваш размер есть в наличии. Рекомендуем выбрать цвет, который будет сочетаться с маджентов</div>               
                 </div>
Index: src/items/item-container.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/items/item-container.js b/src/items/item-container.js
new file mode 100644
--- /dev/null	(date 1617634142366)
+++ b/src/items/item-container.js	(date 1617634142366)
@@ -0,0 +1,29 @@
+import React from "react";
+
+const ItemContainer = ({item, sellerName}) =>{
+
+    return <div className = "item-container">
+        <div className = "item-block">
+                    <span>
+                    <a href={"/details/" + item.id}>
+                        <img className="item1" src={item.photo} alt =""/>
+                    </a>
+                    </span>
+        </div>
+        <button className = "item-block__favorite" title = "Добавить в Избранное"/>
+        <div className = "item-block__info-container">
+            <div className = "item-block__name"> {item.name} </div>
+            <a href={'./seller/' + item.sellerId}>
+                <div className = "item-block__master-name"> {sellerName} </div>
+            </a>
+            <div className = "item-block__payment-container">
+                <div className = "item-block__cost tobasket">
+                    <span>{item.price}</span>
+                    <button className="item-block__to-basket" title="Положить в корзину товар">В корзину</button>
+                </div>
+            </div>
+        </div>
+    </div>
+}
+
+export default ItemContainer
\ No newline at end of file
